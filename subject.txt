Chapter II
Objectives
This project is a surprise.
As you are reaching the end of your Common Core, you have developed strong adap-
tation and problem-solving skills. This project will confront you with -maybe- unknown
technologies, intentionally. Once again, you will have to adapt, discover, explore, exper-
iment to create the expected software.
The project includes a mandatory part and a series of modules on various topics, as
detailed below in this subject. You will be able to choose the modules you want among
a large list, but each module and mandatory element contains technical constraints you
cannot bypass. So you can select the topics you like, but not technologies you like. This
is a deliberate pedagogical choice.
This project is not intended to be a portfolio for an incoming internship or other pro-
fessional experience. Its purpose is to reveal your ability to become acquainted with and
complete a complex task using an unfamiliar technology. This situation will inevitably
be faced during your career, and we aim to develop your self-confidence in front of such
situations.
Especially on this big and long project, we encourage you to carefully read the en-
tire subject, consider several possible strategies, think about your design, before starting
coding anything! Some modules may depend on others, some modules may conflict with
others. Ft_transcendence will bring many doubts and requires a lot of difficult decisions!
Act wisely :-)
Also, this project is definitely a long run, and a wrong path will lead you to a huge loss
of time. Your project management and team management choices will strongly impact
your timeline and results. Many approaches and tools exist to support you on these topics.
Good luck, and have fun playing Pong!
Chapter IV
Mandatory part
This project is about creating a website for the mighty Pong contest!
IV.1 Overview
Your software will offer a nice user interface and real-time multiplayer capabilities allowing
to play Pong with all your friends!
• At first, your project needs to adhere to the mandatory guidelines as a minimum
requirement (see next section), which will represent only a small portion to the final
grade.
• The second part of this subject will offer additional modules that can replace or
complement the mandatory part.
In this subject, you will face words that are highlighted in green. They represent
technology choices that will evolve over time. Be sure to pay close attention to the
version of the subject.
• The use of libraries or tools that provide an immediate
and complete solution for an entire feature or a module is
prohibited.
• Any direct instruction regarding the use (can, must, can’t) of
a third-party library or tool must be followed.
• The use of a small library or tool that solves a simple, unique
task representing a subcomponent of a larger feature or module,
is allowed.
• During the evaluation, the team will justify any use of
library or tool that is not explicitly approved by the project
guidelines and is not in contradiction with the project’s
constraints.
• During the evaluation, the evaluator will take responsibility
for determining whether the use of a specific library or tool
is legitimate (and allowed) or if it essentially solves an
entire feature or module (and is therefore prohibited).
6
ft_transcendence Surprise.
IV.2 Minimal technical requirement
Your project must comply with the following rules:
Some of these constraints may be overridden by the choice of specific
modules.
• You are free to develop the site, with or without a backend.
◦ If you choose to include a backend, it must be written in pure PHP without
frameworks. However, this requirement can be overridden by the Framework
module.
◦ If your backend or framework uses a database, you must follow the constraints
of the Database module.
• The frontend should be developed using Typescript as base code. However, this
requirement can be modified through the FrontEnd module.
• Your website must be a single-page application. The user should be able to use the
Back and Forward buttons of the browser.
• Your website must be compatible with the latest stable up-to-date version of
Mozilla Firefox . Of course, it can be compatible with other web browsers!
• The user should encounter no unhandled errors or warnings when browsing the
website.
• You must use Docker to run your website. Everything must be launched with a
single command line to run an autonomous container.
Several container technologies exist: Docker, containerd, podman,
etc. On the computers of your campus, you may access the container
software in rootless mode for security reasons. This could lead to
the following extra constraints:
• Your runtime needs to be located in /goinfre or /sgoinfre.
• You are not able to use “bind-mount volumes” between the host
and the container if non-root UIDs are used in the container.
Depending on the current requirements of the subject (highlighted in
green above) and the local configuration in clusters, you may need to
adopt different strategies, such as: container solution in virtual
machine, rebuild your container after your changes, craft your own
image with root as unique UID.
7
ft_transcendence Surprise.
IV.3 Game
The main purpose of this website is to play Pong versus other players.
• Users must be able to participate in a live Pong game against another player directly
on the website. Both players will use the same keyboard. The Remote players
module can enhance this functionality with remote players.
• A player must be able to play against another, and a tournament system should
also be available. This tournament will consist of multiple players who can take
turns playing against each other. You have flexibility in how you implement the
tournament, but it must clearly display who is playing against whom and the order
of the play.
• A registration system is required: at the start of a tournament, each player must
input their alias. The aliases will be reset when a new tournament begins. How-
ever, this requirement can be modified using the Standard User Management
module. Note: This does not imply user account creation.
In the default (mandatory) version, users simply enter an alias manually.
• There must be a matchmaking system: the tournament system should organize
the matchmaking of the participants, and announce the next match.
• All players must adhere to the same rules, including having identical paddle speed.
This requirement also applies when using AI; the AI must exhibit the same speed
as a regular player.
• The game must adhere to the default frontend constraints (as outlined above), or
you may choose to use the FrontEnd module, or override it with the Graphics
module. While the visual aesthetics can vary, the game must still capture the
essence of the original Pong (1972).
8
ft_transcendence Surprise.
• The use of libraries or tools that provide an immediate
and complete solution for an entire feature or module is
prohibited.
• Any direct instruction regarding the use (can, must, can’t) of
a third-party library or tool must be followed.
• The use of a small library or tool that solves a simple,
unique task, representing a subcomponent of a larger feature
or module, is allowed.
• During the evaluation, the team will justify any use of a
library or tool that is not explicitly approved by the project
guidelines and is not in contradiction with the project’s
constraints.
• During the evaluation, the evaluator will determine whether the
use of a specific library or tool is legitimate (and allowed)
or if it essentially solves an entire feature or module (and is
therefore prohibited).
• The tournament system must work with or without user
registration.
◦ Without the Standard User Management module: users
manually input an alias.
◦ With the module: aliases are linked to registered
accounts, allowing persistent stats and friend lists.
The module extends the tournament logic; it does not replace
it.
9
ft_transcendence Surprise.
IV.4 Security concerns
In order to create a functional website, there are several security concerns you must
address:
• Any password stored in your database, if applicable, must be hashed.
• Your website must be protected against SQL injections/XSS attacks.
• If you have a backend or any other features, it is mandatory to enable an HTTPS
connection for all aspects (use wss instead of ws for example).
• You must implement validation mechanisms for forms and any user input, either on
the base page if no backend is used, or on the server side if a backend is employed.
• Regardless of whether you choose to implement the JWT Security module with
2FA, it’s essential to prioritize the security of your website. For instance, if you
choose to create an API, ensure your routes are protected. Even if you decide not
to use JWT tokens, securing the site remains critical.
Please make sure you use a strong password hashing algorithm
For obvious security reasons, any credentials, API keys, env
variables etc., must be saved locally in a .env file and ignored
by git. Publicly stored credentials will cause your project to fail.
Chapter V
Modules
Now that you’ve accomplished 25% of the project, congratulations!
With a functional basic website in place, the next step is to choose modules for fur-
ther improvement.
To achieve 100% project completion, a minimum of 7 major modules is required.
It’s crucial to carefully review each module as it may require modifications to your base-
line website. Therefore, we strongly recommend reading this entire subject thoroughly.
• The use of libraries or tools that provide an immediate
and complete solution for an entire feature or module is
prohibited.
• Any direct instructions regarding the use (can, must, can’t) of
a third-party library or tool must be followed.
• The use of a small library or tool that solves a simple,
unique task, representing a subcomponent of a larger feature
or module, is allowed.
• During the evaluation, the team will justify any usage of
library or tool that is not explicitly approved by the subject,
and that does not contradict the subject’s constraints.
• During the evaluation, the evaluator will determine whether the
use of a specific library or tool is legitimate (and allowed)
or if it essentially solves an entire feature or module (and is
therefore prohibited).
Two Minor Modules count as one Major Module.
• Web
◦ Major module: Use a framework to build the backend.
◦ Minor module: Use a framework or a toolkit to build the frontend.
◦ Minor module: Use a database for the backend.
• User Management
◦ Major module: Standard user management, authentication, users across
tournaments.
◦ Major module: Implementing a remote authentication.
Gameplay and user experience
◦ Minor module: Game customization options.
• AI-Algo
◦ Major module: Introduce an AI opponent.
◦ Minor module: User and game stats dashboards
• Cybersecurity
 Major module: Implement Two-Factor Authentication (2FA) and JWT.
 • Graphics
◦ Major module: Use advanced 3D techniques
• Accessibility
◦ Minor module: Expanding browser compatibility.
◦ Minor module: Supports multiple languages.
◦ Minor module: Server-Side Rendering (SSR) integration
• Server-Side Pong
◦ Major module: Replace basic Pong with server-side Pong and implement an
API.






.2 Web
These modules enable the integration of advanced web features into your Pong game.


• Major module: Use a framework to build the backend.
In this major module, you are required to use a specific web framework for backend
development: Fastify with Node.js .
You can create the backend without using the constraints of this
module by using the default backend language (as specified above in
the mandatory part). However, this module will only be valid if you
follow its requirements.


• Minor module: Use a framework or toolkit to build the front-end.
Your frontend development must use the Tailwind CSS in addition of the Type-
script, and nothing else.
You can create a front-end without using the constraints of this
module by using the default front-end directives (as specified above
in the mandatory part). However, this module will only be valid if
you follow its requirements.


• Minor module: Use a database for the backend -and more.
The designated database for all DB instances in your project is SQLite This choice
ensure data consistency and compatibility across all project components and may
be a prerequisite for other modules, such as the backend Framework module.





V.3 User Management
This module delves into the realm of User Management, addressing key aspects of
user interactions and access control within the Pong platform. It encompasses two major
components, each focused on essential elements of user management and authentica-
tion: user participation across multiple tournaments and the implementation of remote
authentication.


• Major module: Standard user management, authentication and users across tour-
naments.
◦ Users can securely subscribe to the website.
◦ Registered users can securely log in.
◦ Users can select a unique display name to participate in tournaments.
◦ Users can update their information.
◦ Users can upload an avatar, with a default option if none is provided.
◦ Users can add others as friends and view their online status.
◦ User profiles display stats, such as wins and losses.
◦ Each user has a Match History including 1v1 games, dates, and relevant
details, accessible to logged-in users.
The management of duplicate usernames/emails is at your discretion;
please ensure a logical solution is provided.


• Major module: Implement remote authentication.
In this major module, the goal is to implement a secure external authentication
system using OAuth 2.0 .
15
ft_transcendence Surprise.
• You are free to choose any OAuth-compatible provider (e.g., Google,
GitHub, etc.).
16
ft_transcendence Surprise.
Key features and objectives include:
◦ Integrate the authentication system, allowing users to securely sign in.
◦ Obtain the necessary credentials and permissions from the authority to enable
secure login.
◦ Implement user-friendly login and authorization flows that adhere to best prac-
tices and security standards.
◦ Ensure the secure exchange of authentication tokens and user information
between the web application and the authentication provider.
This major module aims to provide a remote user authentication, offering users a
secure and convenient way to access the web application.

V.4 Gameplay and user experience
• Minor module: Game customization options.
In this minor module, the goal is to provide customization options for all available
games on the platform. Key features and objectives include:
18
ft_transcendence Surprise.
◦ Offer customization features, such as power-ups, attacks, or different maps,
that enhance the gameplay experience.
◦ Allow users to choose a default version of the game with basic features if they
prefer a simpler experience.
◦ Ensure that customization options are available and applicable to all games
offered on the platform.
◦ Implement user-friendly settings menus or interfaces for adjusting game pa-
rameters.
◦ Maintain consistency in customization features across all games to provide a
unified user experience.
This module aims to give users the flexibility to tailor their gaming experience
across all available games by providing a variety of customization options while
also offering a default version for those who prefer a straightforward gameplay
experience.
V.5 AI-Algo
These modules serve to introduce data-driven elements to the project. The major module
introduces an AI opponent for enhanced gameplay, while the minor module focuses on
user and game statistics dashboards, offering users a minimalistic yet insightful glimpse
into their gaming experiences.
• Major module: Introduce an AI opponent.
In this major module, the objective is to incorporate an AI player into the game.
Notably, the use of the A* algorithm is not permitted for this task. Key features
and goals include:
◦ Develop an AI opponent that provides a challenging and engaging gameplay
experience for users.
◦ The AI must replicate human behavior, which means that in your AI imple-
mentation, you must simulate keyboard input. The constraint here is that
the AI can only refresh its view of the game once per second, requiring it to
anticipate bounces and other actions.
The AI must utilize power-ups if you have chosen to implement the
Game customization options module.
◦ Implement AI logic and decision-making processes that enable the AI player
to make intelligent and strategic moves.
◦ Explore alternative algorithms and techniques to create an effective AI player
without relying on A*.
◦ Ensure that the AI adapts to different gameplay scenarios and user interac-
tions.
You will need to explain in detail how your AI works during your
evaluation. Creating an AI that does nothing is strictly prohibited;
it must have the capability to win occasionally.
This major module aims to enhance the game by introducing an AI opponent that
adds excitement and competitiveness without relying on the A* algorithm.
• Minor module: User and Game Stats Dashboards.
In this minor module, the goal is to introduce dashboards that display statistics for
individual users and game sessions. Key features and objectives include:
◦ Create user-friendly dashboards that provide users with insights into their
gaming statistics.
20
ft_transcendence Surprise.
◦ Develop a separate dashboard for game sessions, showing detailed statistics,
outcomes, and historical data for each match.
◦ Ensure that the dashboards offer an intuitive and informative user interface
for tracking and analyzing data.
◦ Implement data visualization techniques, such as charts and graphs, to present
statistics in a clear and visually appealing manner.
◦ Allow users to access and explore their own gaming history and performance
metrics conveniently.
◦ Feel free to add any metrics you deem useful.
This minor module aims to empower users with the ability to monitor their gaming
statistics and game session details through user-friendly dashboards, providing a
comprehensive view of their gaming experience.

V.6 Cybersecurity
These cybersecurity modules are designed to enhance the security posture of the project.
The major module focuses on robust protection through Web Application Firewall (WAF)
and ModSecurity configurations, as well as HashiCorp Vault for secure secrets manage-
ment. The minor modules complement this effort by adding features for GDPR com-
pliance, user data anonymization, account deletion, Two-Factor authentication (2FA),
and JSON Web Tokens (JWT), collectively ensuring the project’s commitment to data
protection, privacy, and authentication security.
• Major module: Implement Two-Factor Authentication (2FA) and JWT.
The goal of this major module is to enhance security and user authentication
by introducing Two-Factor Authentication (2FA) and utilizing JSON Web Tokens
(JWT). Key features and objectives include:
◦ Implement Two-Factor Authentication (2FA) as an additional layer of security
for user accounts, requiring users to provide a secondary verification method,
such as a one-time code, in addition to their password.
◦ Utilize JSON Web Tokens (JWT) as a secure method for authentication and
authorization, ensuring that user sessions and access to resources are managed
securely.
◦ Provide a user-friendly setup process for enabling 2FA, with options for SMS
codes, authenticator apps, or email-based verification.
◦ Ensure that JWT tokens are issued and validated securely to prevent unau-
thorized access to user accounts and sensitive data.
This major module aims to strengthen user account security by offering Two-Factor
Authentication (2FA) and enhancing authentication and authorization through the
use of JSON Web Tokens (JWT).
V.8 Graphics
• Major module: Implementing Advanced 3D Techniques
This major module,"Graphics," focuses on enhancing the visual aspects of the Pong
game. It introduces the use of advanced 3D techniques to create a more immersive
gaming experience. Specifically, the Pong game will be developed using Babylon.js
to achieve the desired visual effects.
◦ Advanced 3D Graphics: The primary goal of this module is to implement
advanced 3D graphics techniques to elevate the visual quality of the Pong
game. By utilizing Babylon.js , the goal is to create stunning visual effects
that immerse players in the gaming environment.
◦ Immersive Gameplay: The incorporation of advanced 3D techniques enhances
the overall gameplay experience by providing users with a visually engaging
and captivating Pong game.
◦ Technology Integration: The chosen technology for this module is Babylon.js .
These tools will be used to create the 3D graphics, ensuring compatibility and
optimal performance.
This major module aims to revolutionize the Pong game’s visual elements by intro-
ducing advanced 3D techniques. Through the use of Babylon.js , we aim to provide
players with an immersive and visually stunning gaming experience.
V.9 Accessibility
These modules are designed to enhance the accessibility of our web application, with a
focus on ensuring compatibility across all devices, expanding browser support, offering
multi-language capabilities, providing accessibility features for visually impaired users,
and integrating Server-Side Rendering (SSR) for improved performance and user experi-
ence.
• Minor module: Expanding Browser Compatibility.
In this minor module, the objective is to enhance the compatibility of the web
application by adding support for an additional web browser. Key features and
objectives include:
◦ Extend browser support to include an additional web browser, ensuring that
users can access and use the application seamlessly.
◦ Conduct thorough testing and optimization to ensure that the web application
functions correctly and displays correctly in the newly supported browser.
◦ Address any compatibility issues or rendering discrepancies that may arise in
the added web browser.
◦ Ensure a consistent user experience across all supported browsers, maintaining
usability and functionality.
This minor module aims to broaden the accessibility of the web application by
supporting an additional web browser, providing users with more choices for their
browsing experience.
• Minor module: Multiple language support.
In this minor module, the objective is to ensure that your website supports multiple
languages to cater to a diverse user base. Key features and goals include:
◦ Implement support for a minimum of three languages on the website to ac-
commodate a broad audience.
• Minor module: Server-Side Rendering (SSR) Integration.
In this minor module, the focus is on integrating Server-Side Rendering (SSR)
to enhance the performance and user experience of your website. Key objectives
include:
◦ Implement SSR to improve the website’s loading speed and overall perfor-
mance.
◦ Ensure that content is pre-rendered on the server and delivered to users’
browsers for faster initial page loads.
◦ Optimize SEO by providing search engines with pre-rendered HTML content.
◦ Maintain a consistent user experience while benefiting from the advantages of
SSR.
This module aims to boost website performance and SEO by integrating Server-Side
Rendering for faster page loads and improved user experience.
V.10 Server-Side Pong
• Major module: Replace Basic Pong with Server-Side Pong and Implementing an
API.
In this major module, the goal is to replace the basic Pong game with a server-
side Pong game, accompanied by the implementation of an API. Key features and
objectives include:
◦ Develop server-side logic for the Pong game to handle gameplay, ball move-
ment, scoring, and player interactions.
◦ Create an API that exposes the necessary resources and endpoints to interact
with the Pong game, allowing partial usage of the game via the Command-Line
Interface (CLI) and web interface.
◦ Design and implement the API endpoints to support game initialization, player
controls, and game state updates.
◦ Ensure that the server-side Pong game is responsive, providing an engaging
and enjoyable gaming experience.
◦ Integrate the server-side Pong game with the web application, allowing users
to play the game directly on the website.
This major module aims to elevate the Pong game by migrating it to the server
side, enabling interaction through both a web interface and CLI while offering an
API for easy access to game resources and features.